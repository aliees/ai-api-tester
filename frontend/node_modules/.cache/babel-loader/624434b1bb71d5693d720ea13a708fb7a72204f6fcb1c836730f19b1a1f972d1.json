{"ast":null,"code":"var _jsxFileName = \"/Users/alieesali/Desktop/ai-api-tester/frontend/src/components/ApiForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApiForm = ({\n  onSendRequest,\n  loading\n}) => {\n  _s();\n  const [url, setUrl] = useState('');\n  const [method, setMethod] = useState('GET');\n  const [headers, setHeaders] = useState('');\n  const [body, setBody] = useState('');\n  const [numTestCases, setNumTestCases] = useState(5);\n  const [description, setDescription] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSendRequest({\n      url,\n      method,\n      headers,\n      body,\n      numTestCases,\n      description\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"API Request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: url,\n        onChange: e => setUrl(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Method:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: method,\n        onChange: e => setMethod(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"GET\",\n          children: \"GET\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"POST\",\n          children: \"POST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"PUT\",\n          children: \"PUT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"DELETE\",\n          children: \"DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Headers (JSON):\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: headers,\n        onChange: e => setHeaders(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Body (JSON):\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: body,\n        onChange: e => setBody(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Number of Test Cases:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: numTestCases,\n        onChange: e => setNumTestCases(parseInt(e.target.value, 10)),\n        min: \"1\",\n        max: \"20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"API Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      children: loading ? 'Loading...' : 'Send Request'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ApiForm, \"QmQc8f2FBdgkqKUzE7mAPLhSeOU=\");\n_c = ApiForm;\nexport default ApiForm;\nvar _c;\n$RefreshReg$(_c, \"ApiForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ApiForm","onSendRequest","loading","_s","url","setUrl","method","setMethod","headers","setHeaders","body","setBody","numTestCases","setNumTestCases","description","setDescription","handleSubmit","e","preventDefault","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","parseInt","min","max","disabled","_c","$RefreshReg$"],"sources":["/Users/alieesali/Desktop/ai-api-tester/frontend/src/components/ApiForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ninterface ApiFormProps {\n  onSendRequest: (data: {\n    url: string;\n    method: string;\n    headers: string;\n    body: string;\n    numTestCases: number;\n    description: string;\n  }) => void;\n  loading: boolean;\n}\n\nconst ApiForm: React.FC<ApiFormProps> = ({ onSendRequest, loading }) => {\n  const [url, setUrl] = useState('');\n  const [method, setMethod] = useState('GET');\n  const [headers, setHeaders] = useState('');\n  const [body, setBody] = useState('');\n  const [numTestCases, setNumTestCases] = useState(5);\n  const [description, setDescription] = useState('');\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSendRequest({ url, method, headers, body, numTestCases, description });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>API Request</h2>\n      <label>\n        URL:\n        <input\n          type=\"text\"\n          value={url}\n          onChange={(e) => setUrl(e.target.value)}\n          required\n        />\n      </label>\n      <label>\n        Method:\n        <select value={method} onChange={(e) => setMethod(e.target.value)}>\n          <option value=\"GET\">GET</option>\n          <option value=\"POST\">POST</option>\n          <option value=\"PUT\">PUT</option>\n          <option value=\"DELETE\">DELETE</option>\n        </select>\n      </label>\n      <label>\n        Headers (JSON):\n        <textarea\n          value={headers}\n          onChange={(e) => setHeaders(e.target.value)}\n        />\n      </label>\n      <label>\n        Body (JSON):\n        <textarea value={body} onChange={(e) => setBody(e.target.value)} />\n      </label>\n      <label>\n        Number of Test Cases:\n        <input\n          type=\"number\"\n          value={numTestCases}\n          onChange={(e) => setNumTestCases(parseInt(e.target.value, 10))}\n          min=\"1\"\n          max=\"20\"\n        />\n      </label>\n      <label>\n        API Description:\n        <textarea\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n      </label>\n      <button type=\"submit\" disabled={loading}>\n        {loading ? 'Loading...' : 'Send Request'}\n      </button>\n    </form>\n  );\n};\n\nexport default ApiForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}